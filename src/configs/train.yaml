defaults:
  - model: hifi_gan
  - writer: wandb
  - metrics: train_metrics
  - datasets: train
  - dataloader: base_loader
  - transforms: no_transform
  - _self_

optimizer:
  _target_: torch.optim.AdamW
  lr: 2e-4
  betas: [0.8, 0.99]
  weight_decay: 0.01

lr_scheduler:
  # _target_: torch.optim.lr_scheduler.ExponentialLR
  # gamma: 0.999
  # last_epoch: -1
  _target_: torch.optim.lr_scheduler.CosineAnnealingLR
  T_max: 81000

loss_function:
  generator:
    _target_: src.loss.GeneratorLoss
    melspec_params: ${datasets.train.melspec_params}
    lambda_feature: 2
    lambda_mel: 45
  discriminator:
    _target_: src.loss.DiscriminatorLoss

trainer:
  log_step: 100
  n_epochs: 100
  epoch_len: null # one epoch - 809 steps
  device_tensors: ["melspec", "audio", "melspec_real"] # which tensors should be on device (ex. GPU)
  max_grad_norm: 100
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: true # if True, will override the previous run with the same name
  monitor: "max val_WVMOS" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 42
  parallel: false
  device_ids: [4]  # default: [0]
  # from_pretrained: saved/hifi_gan_v3/model_best.pth
